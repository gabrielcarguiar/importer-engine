@page
@model Importer.WApp.Pages.Imports.Pokemons.IndexModel;

@{
    ViewData["Title"] = "Importar Pokemons";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        alert('@successMessage');
    </script>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <script>
        alert('@errorMessage');
    </script>
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h1 class="text-center mb-4">@ViewData["Title"]</h1>

            <form method="post" enctype="multipart/form-data" class="needs-validation" novalidate>

                <div class="form-group">
                    <div class="input-group">
                        <input asp-for="File" type="file" class="form-control" style="display: none;" accept=".csv" />
                        <button type="button" class="btn btn-primary" onclick="selectFile()">Selecionar Arquivo</button>

                        <div style="margin-left: 10px; "></div>

                        <button type="button" class="btn btn-secondary" onclick="outraFuncao()">Baixar Modelo</button>
                    </div>
                </div>

                <div style="margin-bottom: 20px; "></div>

                <div id="gridContainer" style="display: none;">
                </div>

                <div class="form-group d-flex justify-content-end mt-5">
                    <button type="submit" id="importButton" class="btn btn-success" style="display: none;" onclick="importCsv()">Importar</button>
                </div>

            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function selectFile() {
            var fileInput = document.querySelector('input[type="file"]');
            fileInput.click();
            fileInput.addEventListener('change', function () {
                var csvGrid = document.getElementById('gridContainer');
                var importButton = document.getElementById('importButton');
                var selectButton = document.querySelector('button[onclick="selectFile()"]');

                csvGrid.style.display = 'block';
                var reader = new FileReader();
                reader.onload = function (e) {
                    var csvData = e.target.result;
                    displayCsvData(csvData);

                    importButton.style.display = 'block';
                };
                reader.readAsText(fileInput.files[0]);
            });
        }

        function displayCsvData(csvData) {
            var csvGrid = document.getElementById('gridContainer');

            csvGrid.innerHTML = '';

            var csvRows = csvData.split(/\r\n|\n/);

            var table = document.createElement('table');
            table.className = 'table table-bordered';

            for (var i = 0; i < csvRows.length; i++) {
                var row = table.insertRow(-1);
                var cells = csvRows[i].split(',');

                for (var j = 0; j < cells.length; j++) {
                    var cell = row.insertCell(-1);
                    cell.textContent = cells[j];
                }
            }

            csvGrid.appendChild(table);
        }

        function importCsv() {
        }
    </script>
}